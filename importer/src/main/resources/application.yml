# SPDX-License-Identifier: Apache-2.0

hiero:
  mirror:
    importer:
      db:
        connectionInitSql: set timezone TO 'UTC';
        host: 127.0.0.1
        loadBalance: true
        name: mirror_node
        owner: mirror_node
        ownerPassword: mirror_node_pass
        password: mirror_importer_pass
        port: 5432
        restPassword: mirror_api_pass
        restUsername: mirror_api
        schema: public
        sslMode: disable
        tempSchema: temporary
        username: mirror_importer
      migration:
        backfillTransactionHashMigration:
          checksum: 2
        blockNumberMigration:
          checksum: 4
        errataMigration:
          checksum: 6
        fixFungibleTokenTotalSupplyMigration:
          checksum: 2
        historicalAccountInfoMigration:
          checksum: 3
        initializeEntityBalanceMigration:
          checksum: 4
        syntheticTokenAllowanceOwnerMigration:
          checksum: 2
        tokenAccountBalanceMigration:
          checksum: 3
      parser:
        record:
          entity:
            persist:
              syntheticContractLogEvmAddressLookup: true

logging:
  level:
    root: warn
    org.hiero.mirror.importer: info
    org.flywaydb.core.internal.command.DbMigrate: info
    #org.hibernate.type.descriptor.sql.BasicBinder: trace
  pattern:
    console: "%clr(%date{${LOG_DATEFORMAT_PATTERN:yyyy-MM-dd'T'HH:mm:ss.SSS}, UTC}Z){faint} %clr(${LOG_LEVEL_PATTERN:%5level}) %clr(%thread){magenta} %clr(%logger{20}){cyan} %m %exception%n"
management:
  endpoint:
    health:
      group:
        liveness:
          include: ping
        readiness:
          include: db, ping, redis
        startup:
          include: migration
  endpoints:
    web:
      exposure:
        include: health, info, prometheus
  metrics:
    tags:
      application: ${spring.application.name}
  prometheus:
    metrics:
      export:
        step: 60s
server:
  shutdown: graceful
spring:
  application:
    name: importer
  cloud:
    kubernetes:
      leader:
        enabled: false
      reload:
        enabled: true
      secrets:
        paths: /usr/etc/${spring.application.name}
    discovery:
      enabled: false
  datasource:
    name: ${hiero.mirror.importer.db.name}
    password: ${hiero.mirror.importer.db.password}
    url: jdbc:postgresql://${hiero.mirror.importer.db.host}:${hiero.mirror.importer.db.port}/${hiero.mirror.importer.db.name}?tcpKeepAlive=true
    username: ${hiero.mirror.importer.db.username}
    hikari:
      connection-init-sql: ${hiero.mirror.importer.db.connectionInitSql}
      # Note: Flyway does not use Hikari so these properties are ignored. Use URL properties for Flyway instead.
      data-source-properties:
        #loggerLevel: TRACE
        logUnclosedConnections: true
        reWriteBatchedInserts: true
        sslmode: ${hiero.mirror.importer.db.sslMode}
      maximumPoolSize: 20
  flyway:
    baselineOnMigrate: true
    connectRetries: 20
    ignoreMigrationPatterns: ["*:missing", "*:ignored"]
    password: ${hiero.mirror.importer.db.ownerPassword}
    placeholders:
      api-password: ${hiero.mirror.importer.db.restPassword}
      api-user: ${hiero.mirror.importer.db.restUsername}
      db-name: ${hiero.mirror.importer.db.name}
      db-user: ${hiero.mirror.importer.db.username}
      hashShardCount: 6 # Higher shard count here causes a performance issue due to the nature of how hash indexes work
      partitionStartDate: "'2019-09-01'"
      partitionTimeInterval: "'1 month'"
      schema: ${hiero.mirror.importer.db.schema}
      shardCount: 16
      tempSchema: ${hiero.mirror.importer.db.tempSchema}
    user: ${hiero.mirror.importer.db.owner}
  jpa:
    properties:
      hibernate:
        hbm2ddl:
          import_files_sql_extractor: org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor
        jdbc:
          batch_size: 250
        order_inserts: true
        order_updates: true
    show-sql: false
  lifecycle:
    timeout-per-shutdown-phase: 20s
  main:
    allow-circular-references: true # flywayInitializer -> java migrations -> jdbcTemplate -> flywayInitializer
  task:
    scheduling:
      pool:
        size: 6
